try{self["workbox:core:5.1.1"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.1"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}}class r extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const i=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"");class c{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:r}=this.findMatchingRoute({url:s,request:e,event:t});let i,c=r&&r.handler;if(!c&&this.s&&(c=this.s),c){try{i=c.handle({url:s,request:e,event:t,params:n})}catch(e){i=Promise.reject(e)}return i instanceof Promise&&this.i&&(i=i.catch(n=>this.i.handle({url:s,request:e,event:t}))),i}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const r of n){let n;const i=r.match({url:e,request:t,event:s});if(i)return n=i,(Array.isArray(i)&&0===i.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(n=void 0),{route:r,params:n}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let a;const o=()=>(a||(a=new c,a.addFetchListener(),a.addCacheListener()),a);const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[u.prefix,e,u.suffix].filter(e=>e&&e.length>0).join("-"),h=e=>e||f(u.precache),l=e=>e||f(u.runtime),d=new Set;const w=(e,t)=>e.filter(e=>t in e),p=async({request:e,mode:t,plugins:s=[]})=>{const n=w(s,"cacheKeyWillBeUsed");let r=e;for(const e of n)r=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:r}),"string"==typeof r&&(r=new Request(r));return r},g=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:r=[]})=>{const i=await self.caches.open(e),c=await p({plugins:r,request:t,mode:"read"});let a=await i.match(c,n);for(const t of r)if("cachedResponseWillBeUsed"in t){const r=t.cachedResponseWillBeUsed;a=await r.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:a,request:c})}return a},y=async({cacheName:e,request:s,response:n,event:r,plugins:c=[],matchOptions:a})=>{const o=await p({plugins:c,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:i(o.url)});const u=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let r=t,i=!1;for(const t of n)if("cacheWillUpdate"in t){i=!0;const n=t.cacheWillUpdate;if(r=await n.call(t,{request:e,response:r,event:s}),!r)break}return i||(r=r&&200===r.status?r:void 0),r||null})({event:r,plugins:c,response:n,request:o});if(!u)return;const f=await self.caches.open(e),h=w(c,"cacheDidUpdate"),l=h.length>0?await g({cacheName:e,matchOptions:a,request:o}):null;try{await f.put(o,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of d)await e()}(),e}for(const t of h)await t.cacheDidUpdate.call(t,{cacheName:e,event:r,oldResponse:l,newResponse:u,request:o})},b=g,v=async({request:e,fetchOptions:s,event:n,plugins:r=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const i=w(r,"fetchDidFail"),c=i.length>0?e.clone():null;try{for(const t of r)if("requestWillFetch"in t){const s=t.requestWillFetch,r=e.clone();e=await s.call(t,{request:r,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const a=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of r)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:a,response:t}));return t}catch(e){for(const t of i)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:c.clone(),request:a.clone()});throw e}};try{self["workbox:strategies:5.1.1"]&&_()}catch(e){}let q;async function m(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},r=t?t(n):n,i=function(){if(void 0===q){const e=new Response("");if("body"in e)try{new Response(e.body),q=!0}catch(e){q=!1}q=!1}return q}()?s.body:await s.blob();return new Response(i,r)}try{self["workbox:precaching:5.1.1"]&&_()}catch(e){}function R(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const r=new URL(n,location.href),i=new URL(n,location.href);return r.searchParams.set("__WB_REVISION__",s),{cacheKey:r.href,url:i.href}}class x{constructor(e){this.o=h(e),this.u=new Map,this.h=new Map,this.l=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:r}=R(n),i="string"!=typeof n&&n.revision?"reload":"default";if(this.u.has(r)&&this.u.get(r)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.u.get(r),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.l.has(e)&&this.l.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:r});this.l.set(e,n.integrity)}if(this.u.set(r,e),this.h.set(r,i),s.length>0){const e="Workbox is precaching URLs without revision "+`info: ${s.join(", ")}\nThis is generally NOT safe. `+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],r=await self.caches.open(this.o),i=await r.keys(),c=new Set(i.map(e=>e.url));for(const[e,t]of this.u)c.has(t)?n.push(e):s.push({cacheKey:t,url:e});const a=s.map(({cacheKey:s,url:n})=>{const r=this.l.get(s),i=this.h.get(n);return this.p({cacheKey:s,cacheMode:i,event:e,integrity:r,plugins:t,url:n})});return await Promise.all(a),{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.o),t=await e.keys(),s=new Set(this.u.values()),n=[];for(const r of t)s.has(r.url)||(await e.delete(r),n.push(r.url));return{deletedURLs:n}}async p({cacheKey:e,url:s,cacheMode:n,event:r,plugins:i,integrity:c}){const a=new Request(s,{integrity:c,cache:n,credentials:"same-origin"});let o,u=await v({event:r,plugins:i,request:a});for(const e of i||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:r,request:a,response:u}):u.status<400))throw new t("bad-precaching-response",{url:s,status:u.status});u.redirected&&(u=await m(u)),await y({event:r,plugins:i,response:u,request:e===s?a:new Request(e),cacheName:this.o,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.u}getCachedURLs(){return[...this.u.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.u.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.o)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.o,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),r=new Request(e);return()=>n({request:r})}}let U;const L=()=>(U||(U=new x),U);const C=(e,t)=>{const s=L().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:r}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const c=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(i,t);if(yield c.href,s&&c.pathname.endsWith("/")){const e=new URL(c.href);e.pathname+=s,yield e.href}if(n){const e=new URL(c.href);e.pathname+=".html",yield e.href}if(r){const e=r({url:i});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let j=!1;function M(e){j||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const r=h();self.addEventListener("fetch",i=>{const c=C(i.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!c)return;let a=self.caches.open(r).then(e=>e.match(c)).then(e=>e||fetch(c));i.respondWith(a)})})(e),j=!0)}const O=[],A={get:()=>O,add(e){O.push(...e)}},N=e=>{const t=L(),s=A.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},k=e=>{const t=L();e.waitUntil(t.activate())};var E;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),E={},function(e){L().addToCacheList(e),e.length>0&&(self.addEventListener("install",N),self.addEventListener("activate",k))}([{url:"_next/static/chunks/13.fbb79e46a258b7b247d9.js",revision:"408c785a8626f106f9d739bc44f69060"},{url:"_next/static/chunks/14.531db4d6bd85ce374bc9.js",revision:"682c1d556ec3abfcd41264ec81974298"},{url:"_next/static/chunks/45b79a313e540c776aecdfd34915914286f8abe1.9630ceaf4c96d7f135c1.js",revision:"d1f35892e09368274c07a9a36c99658e"},{url:"_next/static/chunks/4e1158be6097f443dc1d75293413e951b70480b3.3394e596cd9561356805.js",revision:"5318fe43707a5e47147211d2f8970b03"},{url:"_next/static/chunks/5.7826daa51dad7c23ddfe.js",revision:"dd7bfaed65fbcda79bb6dc55b2890353"},{url:"_next/static/chunks/framework.fd33418168b04f669a8c.js",revision:"a45ee72b9fb97f6fc88f2e3a7805d452"},{url:"_next/static/chunks/styles.bdddd248107d186d20f1.js",revision:"9b8036eccb61ea1c6334be682328b7bb"},{url:"_next/static/css/styles.19170ec3.chunk.css",revision:"da037bee1f4f2e9b5403835d8041f0e0"},{url:"_next/static/oMACFrfYVwCfq3AXeOfGn/_buildManifest.js",revision:"fa36d40b54afe75d26104452822f1a21"},{url:"_next/static/oMACFrfYVwCfq3AXeOfGn/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/oMACFrfYVwCfq3AXeOfGn/pages/_app.js",revision:"d9bc7c5f23ead0eb680b775f68d4a2d3"},{url:"_next/static/oMACFrfYVwCfq3AXeOfGn/pages/_error.js",revision:"c7347eccaa425ccbd01427558b0f3082"},{url:"_next/static/oMACFrfYVwCfq3AXeOfGn/pages/content/[content].js",revision:"36d85052e1a67d3257f9c0b8d3448a47"},{url:"_next/static/oMACFrfYVwCfq3AXeOfGn/pages/editor/[editor].js",revision:"35a42efad99282a5a1086761a583ee31"},{url:"_next/static/oMACFrfYVwCfq3AXeOfGn/pages/index.js",revision:"8033db65a7d238b892115133ba27c380"},{url:"_next/static/runtime/main-d293bf7957d7aefa220b.js",revision:"1bdf785dadcb0332e82d5705487e95ac"},{url:"_next/static/runtime/polyfills-88d8e603b4c910ccb14b.js",revision:"8450a7e2444dbb38cf899539f63950b3"},{url:"_next/static/runtime/webpack-179e0028945b609a5ed5.js",revision:"fb60c791d4a4925abde9a16322e64b0e"}]),M(E),function(e,s,i){let c;if("string"==typeof e){const t=new URL(e,location.href);c=new n(({url:e})=>e.href===t.href,s,i)}else if(e instanceof RegExp)c=new r(e,s,i);else if("function"==typeof e)c=new n(e,s,i);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});c=e}o().registerRoute(c)}(/.js$|.ttf$|.otf$|.css$|.svg$|.jpg$|.png$/,new class{constructor(e={}){this.o=l(e.cacheName),this.g=e.plugins||[],this.v=e.fetchOptions,this.q=e.matchOptions}async handle({event:e,request:s}){"string"==typeof s&&(s=new Request(s));let n,r=await b({cacheName:this.o,request:s,event:e,matchOptions:this.q,plugins:this.g});if(!r)try{r=await this.m(s,e)}catch(e){n=e}if(!r)throw new t("no-response",{url:s.url,error:n});return r}async m(e,t){const s=await v({request:e,event:t,fetchOptions:this.v,plugins:this.g}),n=s.clone(),r=y({cacheName:this.o,request:e,response:n,event:t,plugins:this.g});if(t)try{t.waitUntil(r)}catch(e){}return s}},"GET");
